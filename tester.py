#! /usr/bin/python

def printForC(num,words):
    result = "}"
    for i in range(0,words):
        result = ","+hex(num&0xFFFFFFFF)[:-1] + result;
        num>>=32;
    result = "{" + result[1:]
    return result

def printArrayForC(array,words):
    for i in range(0,4):
        temp = printForC(array[i],words)
        if i!=3:
            temp = temp + ","
        else:
            temp = temp + "};"
        print temp

if __name__ == "__main__":
    nums256 = [
        0x27de29e9f3d7daa6a016c84084ed034cc0cfe900823086924ea18ed4c675729a,
        0xe18731ae05e6c9ecd6aa28d0e28ec6319ba1bf5e90c790212c3ec4efcca8171d,
        0xe437660d9274e5e3fe3db34e0f783feac04d3774944310f415ed76345c5b38e5,
        0xb3b7741df8e901380545be70c9e417aa8c8ac372482c85fa20e52461b9fbe2eb]
    nums512 = [
        0xa0b5c2a37b3b89791a95d063d27f3d82b5225bb11699621a3965f553f3689008afc7b79e734fbc32db3787b053e5f90d1329fea92fa30c3e99ad1ed62ccfff55,
        0x3010ecc8319b658a18838bb88672a8f38ae69b97cc71fa272870e481d49bcb92ff23726b88fc63997fed323d800959bb63a6f339e2787627d236f5582ce924d9,
        0xac72b48c66b0fd3b6854ee21f91f1e10485819e04cd2cfe798681ca09eb8a0a660906bc191b6be7693488015adab9e0bc4e2b336fbac140d5a33c1a78752c1df,
        0x55c73bd2ba9b7845c31c2483910cbbd4bc201848b971403d6903748c094bb1da7f9803f6868c84af483c0ce6e1ed103fa893e147b601a2a1ed1f7af72d2e35c2]
    nums1024 = [
        0x7980a593501df31f20c5a98c38b9b43394c29d68611b13d495e4587fe40c8ed2cb5b1d0b39ab6cebbb798ecbd1a0ecdf038db2731550cde8b01de5f9f55b9ac68fe9eef4f1bdf3e7debfb9e3b4ff26475da52b8999f3fb743d9e6bba9368773ee5493564461783a19c60b736b8872bfd151574bd0fb8cde9d1c7854763ff7729,
        0xb44f4d0063d6b9d4f9ad6d8225256079f4a23e839d770bfc6c248c03e66bba63602919c975d9d6301662523e6944780efe19e3bd31efc82d674216334331ffec4941215b8741a792d6009473b216994f6d99b7c98bf53500a03dedb35901810957ca585ae31aa0ad36d4be5510e72cf9932ac5d05d297b751ad06a3e9fb3b8e1,
        0xd2a041c73444e882301f6d08cf3a9d2e7e10f3b99a46c984121c37d0ebe2823daa90beecfade374fd15bfdf58a1b3cde0b108b6738bfd614bb42e64a127eae8f46e67bff51c456a361472321ed194b8534afa090c818ee985bd3107a6d6a7c73c96f1fce9e4687e7d6d48ba59112296d356f803a2ae9cf7fde23942ac5969695,
        0x34d662925fb464b2405bc75cc0e155c4b8ee41b635cd97f3d2f20f43cabf9e6c2966eab1db3b1e6f5edbfba3642d503e02997403751796a9e9d58fbdbf86649d23b14074d66db4b1e50ded2299506666c5636e207610599a63080e0ec4e6b9c297d790d06d336eeff8950762be90026f75a696d5adaff961dbc357968037a579]
    nums2048 = [
        0x83c24f6ae336ba0b01568e4d70b578dafae32d83eb9e009f735370e243839a03b33fead6eccef9a140848080a22c740cfcb89995b2acc28af8d1902781ad68c0ac0026ea2af227346f87592b02b413f6b0355d207d145049039520af314d77014d6c62ed39261ecbf39358cd27a891a7593accd0636767b6edb2290ccda9147f8a5361a6e3f71b4c586b2ca895ca29efa908da7e7997958750d8ea696234a6fd1e7255edaf200d550e5218e46b5d4cf75dad4d15dc344e2f3a0ab77dba4c10ac79745bef0b8f85948ac728d3ddfb37a49cca527a5b77b62b25774eaaa55db5baf387e345756c2ed6c55eae8baf046aa49945fd638518396f4897982fccfa51c7,
        0xaab0ce1580b4415245030c9036c8c738a1c385ee4aec115c25610a8fddf6188c375b4154d687a3d9913d95308e1b7ff58a63ee6da6f95d411ae863e35824e6f35c1db2178edb256984309ec1f052cf412cdb4b198b0f25063873000655ca67cbebc2d06966d2f2443ca1e6af8e364013bb0409123568f31d0f63c32cca130f2cbef98e13a06cda1b1d83ea5b97216f7c46993256458e4686ec6109fd94fa7df5307bb11508c48e994971b9d8740a5748f6a637fe8288d0e3ae284fcc57af4eb0866238e8f2b8a953fb97853db96d13764beab7bebd1cc64036029f40fe8ae1d11824902aa2bdf9c60c22d8e39e13a8b2f7631a6e936a0008f002e3adda5273b1,
        0xc37931eec7fbdb992d6b503afdcdb5f6b32aac9b760d8be8b27dca3778c0c6b2aeb54c6317ba8c77d6295cc4c5186a6f29f76a343ca76dd28d388e327a2d441f01467024a6593c3b609474d1b4b0b67553be30279b8cc46bd988e7703c324e268ee3fad46d220e4f9ed4b1f018ca5489787063717d9b836aec8490b94a866b9dd5fb726ca9675bcacd83fce0bb59c219ed1d1648b866df8461f1dd5b2263b7222dea85ccb16b8f808481b4d5ea615e5634669317435d29cc3b5de11f4433fb03f1673618cbb52d8e4a2e9570c5f009896e52dfd3fadcfd91297acf15e18d764900e7e32638ddce9303587fcbb5478b43247b96f0a01ffb3940ad9c818b8ec8b9,
        0x066f8e9adcb6b0dafab693196a023918843e87b1aa1ab92b179ae5efcd24ea1c99bf5cc68fc04b5e0f9e07a1db627e5451f452fa129c5cdfb43a0a376470599da6ccd1f59ea1c225a93fe9012c2f85803fa559f801fa6bc19c1c2be93099886ea45dac66bd3763e122e0ec7b79d6faebf0f7aaf54eaa5ba403a2347172e47d77bc4c7e311d13df84051e609bcc86485fd8c41d0fedeeeb0c75f7bd9df70749c5470b43cb92a30301cd187d026ceb2f95a94ede2e62bf8d96969a5376e18597c19f4ab5812fd727ac080b59bdbf97566fbfeec3affedb0c2d47b76d0cde30f56212b3ee5f4fcbf71ac229e38bc11f811c76a223d8b8d353dda59c90a86baccbe8]
    arrs = [nums256,nums512,nums1024,nums2048]
    words = 256/32
    for arr in arrs:
        assert(pow(arr[0],arr[1],arr[2]) == arr[3])
        printArrayForC(arr,words)
        print ""
        words*=2

    print hex(pow(arrs[1][0],12345,arrs[1][2]))


